@import 'highlight.js/styles/atom-one-dark.css';

/* 
  MUI CSS Variables Compatibility Layer
  Ensures compatibility between MUI v5 and v6
  In v6, these are automatically generated when cssVariables: true is set
  In v5, we provide fallback values
*/
:root {
  /* MUI v5/v6 Palette Variables - Primary */
  --mui-palette-primary-main: #6E73FE;
  --mui-palette-primary-light: #42a5f5;

  /* MUI v5/v6 Palette Variables - Common */
  --mui-palette-common-white: #ffffff;
  --mui-palette-common-black: #000000;

  /* MUI v5/v6 Palette Variables - Text */
  --mui-palette-text-primary: #21222D;
  --mui-palette-text-secondary: rgba(33, 34, 45, 0.7);
  --mui-palette-text-auxiliary: rgba(33, 34, 45, 0.5);
  --mui-palette-text-tertiary: var(--mui-palette-text-auxiliary);
  --mui-palette-text-disabled: rgba(33, 34, 45, 0.3);

  /* MUI v5/v6 Palette Variables - Background */
  --mui-palette-background-default: #ffffff;
  --mui-palette-background-paper: #F8F9FA;

  /* MUI v5/v6 Palette Variables - Warning */
  --mui-palette-warning-main: #ed6c02;
  --mui-palette-warning-light: #ff9800;

  --mui-palette-error-main: #F64E54;
  --mui-palette-success-main: #00DF98;

  /* MUI v5/v6 Other Variables */
  --mui-palette-divider: #ECEEF1;

  /* MUI v5/v6 Shape Variables */
  --mui-shape-borderRadius: 10px;

  /* MUI v5/v6 Transitions Variables */
  --mui-transitions-duration-short: 250ms;
  --mui-transitions-duration-standard: 300ms;
  --mui-transitions-easing-easeOut: cubic-bezier(0.0, 0, 0.2, 1);
  --mui-transitions-easing-easeInOut: cubic-bezier(0.4, 0, 0.2, 1);
}

:root {
  overflow-wrap: break-word;
  text-size-adjust: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.tiptap.ProseMirror code {
  display: inline-block;
  color: var(--mui-palette-primary-main);
  background-color: var(--mui-palette-background-paper);
  padding: 0 5px;
  line-height: 22px;
  word-break: break-all;
  font-family: "JetBrains Mono NL", monospace;
  font-size: 0.875em;
  border-radius: var(--mui-shape-borderRadius);
}

.tiptap.ProseMirror pre {
  background-color: var(--mui-palette-background-paper);
  margin-top: 1em;
  font-family: 'JetBrainsMono', monospace;
  margin-bottom: 1em;
  padding: 1em;
  font-size: 1rem;
  border-radius: var(--mui-shape-borderRadius);
}

.tiptap.ProseMirror pre code {
  background-color: transparent;
  border-radius: 0;
  -webkit-text-fill-color: inherit;
  color: inherit;
}

.tiptap.ProseMirror img {
  cursor: pointer;
  display: block;
}

.tiptap.ProseMirror>img:not([data-type="emoji"] img) {
  margin: 2rem 0;
  outline: 0.125rem solid transparent;
  border-radius: var(--mui-shape-borderRadius);
}

.tiptap.ProseMirror.ProseMirror-focused img:not([data-type="emoji"] img).ProseMirror-selectednode {
  outline-color: var(--mui-palette-primary-main);
}

.tiptap.ProseMirror .tiptap-thread:has(> img) {
  margin: 2rem 0;
}

.tiptap.ProseMirror .tiptap-thread:has(> img) img {
  outline: 0.125rem solid transparent;
  border-radius: var(--mui-shape-borderRadius);
}

.tiptap.ProseMirror .tiptap-thread img {
  margin: 0;
}

.tiptap.ProseMirror ol,
.tiptap.ProseMirror ul {
  margin-top: 1.5em;
  margin-bottom: 1.5em;
  padding-left: 1.5em;
  line-height: 28px;
}

.tiptap.ProseMirror ol:first-child,
.tiptap.ProseMirror ul:first-child {
  margin-top: 0;
}

.tiptap.ProseMirror ol:last-child,
.tiptap.ProseMirror ul:last-child {
  margin-bottom: 0;
}

.tiptap.ProseMirror ol ol,
.tiptap.ProseMirror ol ul,
.tiptap.ProseMirror ul ol,
.tiptap.ProseMirror ul ul {
  margin-top: 0;
  margin-bottom: 0;
}

.tiptap.ProseMirror li p {
  margin-top: 0;
}

.tiptap.ProseMirror ol {
  list-style: decimal;
}

.tiptap.ProseMirror ol ol {
  list-style: lower-alpha;
}

.tiptap.ProseMirror ol ol ol {
  list-style: lower-roman;
}

.tiptap.ProseMirror ul:not([data-type="taskList"]) {
  list-style-image: url('../asset/images/down.svg');
}

.tiptap.ProseMirror ul:not([data-type="taskList"]) ul {
  list-style-image: url('../asset/images/down.svg');
}

.tiptap.ProseMirror ul:not([data-type="taskList"]) ul ul {
  list-style-image: url('../asset/images/down.svg');
}

.tiptap.ProseMirror ul[data-type="taskList"] {
  padding-left: 0.25em;
}

.tiptap.ProseMirror ul[data-type="taskList"] li {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
}

.tiptap.ProseMirror ul[data-type="taskList"] li:not(:has(> p:first-child)) {
  list-style-type: none;
}

.tiptap.ProseMirror ul[data-type="taskList"] li[data-checked="true"]>div>p {
  opacity: 0.5;
  text-decoration: line-through;
}

.tiptap.ProseMirror ul[data-type="taskList"] li[data-checked="true"]>div>p span {
  text-decoration: line-through;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label {
  position: relative;
  padding-top: 4px;
  padding-right: 8px;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label span {
  display: block;
  width: 1em;
  height: 1em;
  border: 1px solid var(--mui-palette-divider);
  border-radius: 4px;
  position: relative;
  cursor: pointer;
  background-color: var(--mui-palette-background-paper);
  transition: background-color 80ms ease-out, border-color 80ms ease-out;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label span::before {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 0.75em;
  height: 0.75em;
  background-color: var(--mui-palette-primary-main);
  opacity: 0;
  -webkit-mask: url("data:image/svg+xml,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22currentColor%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M21.4142%204.58579C22.1953%205.36683%2022.1953%206.63317%2021.4142%207.41421L10.4142%2018.4142C9.63317%2019.1953%208.36684%2019.1953%207.58579%2018.4142L2.58579%2013.4142C1.80474%2012.6332%201.80474%2011.3668%202.58579%2010.5858C3.36683%209.80474%204.63317%209.80474%205.41421%2010.5858L9%2014.1716L18.5858%204.58579C19.3668%203.80474%2020.6332%203.80474%2021.4142%204.58579Z%22%20fill%3D%22currentColor%22%2F%3E%3C%2Fsvg%3E") center/contain no-repeat;
  mask: url("data:image/svg+xml,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22currentColor%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M21.4142%204.58579C22.1953%205.36683%2022.1953%206.63317%2021.4142%207.41421L10.4142%2018.4142C9.63317%2019.1953%208.36684%2019.1953%207.58579%2018.4142L2.58579%2013.4142C1.80474%2012.6332%201.80474%2011.3668%202.58579%2010.5858C3.36683%209.80474%204.63317%209.80474%205.41421%2010.5858L9%2014.1716L18.5858%204.58579C19.3668%203.80474%2020.6332%203.80474%2021.4142%204.58579Z%22%20fill%3D%22currentColor%22%2F%3E%3C%2Fsvg%3E") center/contain no-repeat;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label input[type="checkbox"]:checked+span::before {
  opacity: 1;
}

.tiptap.ProseMirror ul[data-type="taskList"] li div {
  flex: 1 1 0%;
  min-width: 0;
}

.tiptap.ProseMirror {
  white-space: pre-wrap;
  outline: none;
  color: var(--mui-palette-text-primary);
}

.tiptap.ProseMirror p:not(:first-child) {
  font-size: 1rem;
  line-height: 1.6;
  font-weight: normal;
  margin-top: 16px;
}

.tiptap.ProseMirror:not(.readonly):not(.ProseMirror-hideselection) ::selection {
  background-color: var(--mui-palette-divider);
}

.tiptap.ProseMirror:not(.readonly):not(.ProseMirror-hideselection) .selection::selection {
  background: transparent;
}

.tiptap.ProseMirror .selection {
  display: inline;
  background-color: var(--mui-palette-divider);
}

.tiptap.ProseMirror .ProseMirror-hideselection {
  caret-color: transparent;
}

.tiptap.ProseMirror>p.is-editor-empty::before {
  content: attr(data-placeholder);
  pointer-events: none;
  color: var(--mui-palette-text-disabled);
  float: left;
  height: 0;
}

.tiptap.ProseMirror.resize-cursor {
  cursor: ew-resize;
  cursor: col-resize;
}

.tiptap.ProseMirror .ProseMirror-gapcursor {
  display: none;
  pointer-events: none;
  position: absolute;
}

.tiptap.ProseMirror .ProseMirror-gapcursor:after {
  content: "";
  display: block;
  position: absolute;
  top: 1em;
  width: 1.25em;
  border-top: 1px solid var(--mui-palette-text-primary);
  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
}

.tiptap.ProseMirror.ProseMirror-focused .ProseMirror-gapcursor,
.tiptap.ProseMirror.ProseMirror.ProseMirror-focused .ProseMirror-gapcursor {
  display: block;
}

@keyframes ProseMirror-cursor-blink {
  to {
    visibility: hidden;
  }
}

.tiptap.ProseMirror blockquote {
  position: relative;
  padding-left: 1em;
  padding-top: 0.375em;
  padding-bottom: 0.375em;
  margin: 1.5rem 0;
  color: var(--mui-palette-text-tertiary);
  background-color: var(--mui-palette-background-paper);
}

.tiptap.ProseMirror blockquote p {
  margin-top: 0;
}

.tiptap.ProseMirror blockquote::before,
.tiptap.ProseMirror blockquote.is-empty::before {
  position: absolute;
  bottom: 0;
  left: 0;
  top: 0;
  height: 100%;
  width: 0.25em;
  background-color: var(--mui-palette-divider);
  content: "";
  border-radius: 0;
}

.tiptap.ProseMirror .collaboration-cursor__caret {
  border-right: 1px solid transparent;
  border-left: 1px solid transparent;
  pointer-events: none;
  margin-left: -1px;
  margin-right: -1px;
  position: relative;
  word-break: normal;
}

.tiptap.ProseMirror .collaboration-cursor__label {
  border-radius: var(--mui-shape-borderRadius);
  border-bottom-left-radius: 0;
  font-size: 0.75rem;
  font-weight: 600;
  left: -1px;
  line-height: 1;
  padding: 0.125rem 0.375rem;
  position: absolute;
  top: -1.3em;
  user-select: none;
  white-space: nowrap;
}

.tiptap.ProseMirror [data-type="emoji"] img {
  display: inline-block;
  width: 1.25em;
  height: 1.25em;
  cursor: text;
}

.tiptap.ProseMirror h1,
.tiptap.ProseMirror h2,
.tiptap.ProseMirror h3,
.tiptap.ProseMirror h4,
.tiptap.ProseMirror h5,
.tiptap.ProseMirror h6 {
  position: relative;
  color: inherit;
  font-style: inherit;
  padding-bottom: 0.25em;
  border-bottom: 1px solid var(--mui-palette-divider);
}

.tiptap.ProseMirror h1 {
  font-size: 2.2em;
  font-weight: 700;
  margin-top: 0.7em;
  color: var(--mui-palette-primary-main);
  border-bottom: 2px solid var(--mui-palette-primary-main);
}

.tiptap.ProseMirror h2 {
  font-size: 1.6em;
  font-weight: 700;
  margin-top: 0.7em;
}

.tiptap.ProseMirror h3 {
  font-size: 1.2em;
  font-weight: 600;
  margin-top: 0.7em;
}

.tiptap.ProseMirror h4 {
  font-size: 1em;
  font-weight: 600;
  margin-top: 0.7em;
}

.tiptap.ProseMirror h5 {
  font-size: 1em;
  font-weight: 600;
  color: var(--mui-palette-text-secondary);
  margin-top: 0.7em;
}

.tiptap.ProseMirror h6 {
  font-size: 0.9em;
  font-weight: 600;
  color: var(--mui-palette-text-secondary);
  margin-top: 0.7em;
}

.tiptap.ProseMirror hr {
  margin-top: 3em;
  margin-bottom: 3em;
  border: none;
  height: 1px;
  background-color: var(--mui-palette-divider);
}

.tiptap.ProseMirror.ProseMirror-focused hr.ProseMirror-selectednode {
  border-radius: 9999px;
  outline: 3px solid var(--mui-palette-primary-main);
  outline-offset: 2px;
}

.tiptap.ProseMirror a {
  color: var(--mui-palette-primary-main);
}

.tiptap.ProseMirror [data-type="mention"] {
  display: inline-block;
  color: var(--mui-palette-primary-main);
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline {
  transition: color 0.2s ease-in-out, background-color 0.2s ease-in-out;
  color: var(--thread-text);
  border-bottom: 2px dashed var(--mui-palette-warning-main);
  font-weight: 600;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline.tiptap-thread--selected,
.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline.tiptap-thread--hovered {
  background-color: var(--mui-palette-warning-light);
  border-bottom-color: transparent;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:has(img) {
  outline: 0.125rem solid var(--mui-palette-warning-main);
  border-radius: var(--mui-shape-borderRadius);
  overflow: hidden;
  width: fit-content;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:has(img).tiptap-thread--selected {
  outline-width: 0.25rem;
  outline-color: var(--mui-palette-warning-main);
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:has(img).tiptap-thread--hovered {
  outline-width: 0.25rem;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:not(:has(img)) {
  border-radius: var(--mui-shape-borderRadius);
  border-bottom: 0.125rem dashed var(--mui-palette-warning-main);
  padding-bottom: 0.5rem;
  outline: 0.25rem solid transparent;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:not(:has(img)).tiptap-thread--hovered,
.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:not(:has(img)).tiptap-thread--selected {
  background-color: var(--mui-palette-warning-main);
  outline-color: var(--mui-palette-warning-main);
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--resolved.tiptap-thread--inline.tiptap-thread--selected {
  background-color: var(--mui-palette-warning-main);
  border-color: transparent;
  opacity: 0.5;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--block:has(.react-renderer) {
  margin-top: 3rem;
  margin-bottom: 3rem;
}

.tiptap.ProseMirror .Tiptap-mathematics-editor {
  padding: 0 0.25rem;
  margin: 0 0.25rem;
  border: 1px solid var(--mui-palette-divider);
  font-family: monospace;
  font-size: 0.875rem;
}

.tiptap.ProseMirror .Tiptap-mathematics-render {
  padding: 0 0.25rem;
}

.tiptap.ProseMirror .Tiptap-mathematics-render--editable {
  cursor: pointer;
  transition: background 0.2s;
}

.tiptap.ProseMirror .Tiptap-mathematics-render--editable:hover {
  background: var(--mui-palette-background-default);
}

.tiptap.ProseMirror .Tiptap-mathematics-editor,
.tiptap.ProseMirror .Tiptap-mathematics-render {
  border-radius: var(--mui-shape-borderRadius);
  display: inline-block;
}

.is-empty[data-placeholder]:has(> .ProseMirror-trailingBreak:only-child)::before {
  content: "Write, type '/' for commands…";
}

.is-empty[data-placeholder]:has(> .ProseMirror-trailingBreak:only-child):before {
  pointer-events: none;
  height: 0;
  position: absolute;
  font-style: italic;
}

.is-empty[data-placeholder]:has(> .ProseMirror-trailingBreak):before {
  color: var(--placeholder-color);
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes zoomIn {
  from {
    transform: scale(0.95);
  }

  to {
    transform: scale(1);
  }
}

@keyframes zoomOut {
  from {
    transform: scale(1);
  }

  to {
    transform: scale(0.95);
  }
}

@keyframes zoom {
  0% {
    opacity: 0;
    transform: scale(0.95);
  }

  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes slideFromTop {
  from {
    transform: translateY(-0.5rem);
  }

  to {
    transform: translateY(0);
  }
}

@keyframes slideFromRight {
  from {
    transform: translateX(0.5rem);
  }

  to {
    transform: translateX(0);
  }
}

@keyframes slideFromLeft {
  from {
    transform: translateX(-0.5rem);
  }

  to {
    transform: translateX(0);
  }
}

@keyframes slideFromBottom {
  from {
    transform: translateY(0.5rem);
  }

  to {
    transform: translateY(0);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.editor-container hr {
  height: 0;
  color: inherit;
  border-top-width: 1px;
}

.editor-container abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

.editor-container h1,
.editor-container h2,
.editor-container h3,
.editor-container h4,
.editor-container h5,
.editor-container h6 {
  font-size: inherit;
  font-weight: inherit;
}

.editor-container a {
  color: inherit;
  text-decoration: none;
}

.editor-container b,
.editor-container strong {
  font-weight: bolder;
}

.editor-container code,
.editor-container kbd,
.editor-container samp,
.editor-container pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-feature-settings: normal;
  font-variation-settings: normal;
  font-size: 1em;
}

.editor-container small {
  font-size: 80%;
}

.editor-container sub,
.editor-container sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

.editor-container sub {
  bottom: -0.25em;
}

.editor-container sup {
  top: -0.5em;
}

.editor-container :-moz-focusring {
  outline: auto;
}

.editor-container :-moz-ui-invalid {
  box-shadow: none;
}

.editor-container progress {
  vertical-align: baseline;
}

.editor-container ::-webkit-inner-spin-button,
.editor-container ::-webkit-outer-spin-button {
  height: auto;
}

.editor-container [type="search"] {
  appearance: textfield;
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

.editor-container ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.editor-container ::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

.editor-container summary {
  display: list-item;
}

.editor-container blockquote,
.editor-container dl,
.editor-container dd,
.editor-container h1,
.editor-container h2,
.editor-container h3,
.editor-container h4,
.editor-container h5,
.editor-container h6,
.editor-container hr,
.editor-container figure,
.editor-container p,
.editor-container pre {
  margin: 0;
}

.editor-container fieldset {
  margin: 0;
  padding: 0;
}

.editor-container legend {
  padding: 0;
}

.editor-container ol,
.editor-container ul,
.editor-container menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

.editor-container dialog {
  padding: 0;
}

.editor-container textarea {
  resize: vertical;
}

.editor-container :disabled {
  cursor: default;
}

.editor-container img,
.editor-container svg,
.editor-container video,
.editor-container canvas,
.editor-container audio,
.editor-container iframe,
.editor-container embed,
.editor-container object {
  display: block;
}

.editor-container img,
.editor-container video {
  max-width: 100%;
  height: auto;
  padding: 5px;
  border: 1px solid var(--mui-palette-divider);
  border-radius: var(--mui-shape-borderRadius);
}

.editor-container video {
  min-width: 300px;
}

.editor-container [hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

.tiptap.ProseMirror {
  font-family: "DM Sans", sans-serif;
}

/* 表格基础样式 */
.editor-table {
  border-collapse: collapse;
  margin: 1.5rem 0;
  text-indent: 0;
  border-color: inherit;
  width: 100%;
  border-radius: var(--mui-shape-borderRadius);
  overflow: hidden;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  transition: box-shadow var(--mui-transitions-duration-short) var(--mui-transitions-easing-easeOut);
}

/* 表格单元格样式 */
.editor-table td,
.editor-table th {
  border: 1px solid var(--mui-palette-divider);
  padding: 12px 16px;
  min-width: 60px;
  word-break: break-word;
  position: relative;
  vertical-align: top;
  transition: background-color var(--mui-transitions-duration-short) var(--mui-transitions-easing-easeOut);
}

/* 表头样式 */
.editor-table th {
  background-color: var(--mui-palette-background-paper);
  font-weight: 600;
  color: var(--mui-palette-text-primary);
  text-align: left;
  border-bottom: 1px solid var(--mui-palette-divider);
}

/* 编辑模式下的表格 */
.editor-table.editor-table-edit td,
.editor-table.editor-table-edit th {
  cursor: context-menu;
}

/* 编辑模式下单元格hover效果 - 只有单个单元格变色 */
.editor-table.editor-table-edit td:hover {
  background-color: var(--mui-palette-background-paper);
}

/* 表头在编辑模式下的hover效果 */
.editor-table.editor-table-edit th:hover {
  background-color: var(--mui-palette-background-paper);
}

/* 只读模式下的表格 - 无hover效果 */
.editor-table.editor-table-read td,
.editor-table.editor-table-read th {
  cursor: default;
}

/* 选中单元格样式 */
.editor-table .selected-cell {
  background-color: var(--mui-palette-primary-light) !important;
  opacity: 0.1 !important;
  outline: 2px solid var(--mui-palette-primary-main);
  outline-offset: -1px;
}

/* 多选单元格样式 - 50%透明度的primary.main背景色 */
.editor-table .multi-selected-cell {
  background-color: var(--mui-palette-primary-main) !important;
  opacity: 0.5 !important;
  position: relative;
}

/* 多选单元格边框效果 */
.editor-table .multi-selected-cell::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: 1px solid var(--mui-palette-primary-main);
  pointer-events: none;
  box-sizing: border-box;
}

/* 表格行样式 - 移除交替行底色和整行hover效果 */

/* 表格边框优化 */
.editor-table td:first-child,
.editor-table th:first-child {
  border-left: none;
}

.editor-table td:last-child,
.editor-table th:last-child {
  border-right: none;
}

.editor-table tr:first-child th {
  border-top: none;
}

.editor-table tr:last-child td {
  border-bottom: none;
}

/* 表格内容对齐 */
.editor-table td p,
.editor-table th p {
  margin: 0;
  line-height: 1.5;
}

/* 表格响应式 */
@media (max-width: 768px) {
  .editor-table {
    font-size: 0.875rem;
  }

  .editor-table td,
  .editor-table th {
    padding: 8px 12px;
    min-width: 40px;
  }
}

.ProseMirror {
  padding-inline: 1rem;
}

.drag-handle {
  align-items: center;
  background: var(--mui-palette-background-paper);
  border-radius: 4px;
  border: 1px solid var(--mui-palette-divider);
  cursor: grab;
  display: flex;
  height: 1.25rem;
  justify-content: center;
  width: 1.25rem;
}

.drag-handle:active {
  cursor: grabbing;
}

.tiptap.ProseMirror .code-block-wrapper {
  position: relative;
}

.tiptap.ProseMirror .code-block-wrapper .copy-button {
  position: absolute;
  right: 10px;
  top: 10px;
  background: var(--mui-palette-background-paper);
  border: 1px solid var(--mui-palette-divider);
  color: var(--mui-palette-text-primary);
  padding: 4px 8px;
  border-radius: var(--mui-shape-borderRadius);
  font-size: 12px;
  cursor: pointer;
  transition: all 0.2s ease;
  opacity: 0;
  user-select: none;
}

.tiptap.ProseMirror .code-block-wrapper:hover .copy-button {
  opacity: 1;
}

.tiptap.ProseMirror .code-block-wrapper .copy-button:hover {
  color: var(--mui-palette-primary-main)
}

.tiptap.ProseMirror video {
  width: 100%;
  height: auto;
  display: block;
}

.tiptap.ProseMirror>video:not([data-type="emoji"] video) {
  margin: 2rem 0;
  outline: 1px solid transparent;
  border-radius: var(--mui-shape-borderRadius);
}

.tiptap.ProseMirror.ProseMirror-focused video:not([data-type="emoji"] video).ProseMirror-selectednode {
  outline-color: var(--mui-palette-primary-main);
}

.tiptap.ProseMirror .tiptap-thread:has(> video) {
  margin: 2rem 0;
}

.tiptap.ProseMirror .tiptap-thread:has(> video) video {
  outline: 1px solid transparent;
  border-radius: var(--mui-shape-borderRadius);
}

.tiptap.ProseMirror .tiptap-thread video {
  margin: 0;
}