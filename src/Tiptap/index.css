@import 'highlight.js/styles/atom-one-dark.css';

:root {
  /****************** 
  Basics
  ******************/
  overflow-wrap: break-word;
  text-size-adjust: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /****************** 
  Colors variables
  ******************/
  /* Gray alpha (light mode) */
  --tt-gray-light-a-50: rgba(56, 56, 56, 0.04);
  --tt-gray-light-a-100: rgba(15, 22, 36, 0.05);
  --tt-gray-light-a-200: rgba(37, 39, 45, 0.1);
  --tt-gray-light-a-300: rgba(47, 50, 55, 0.2);
  --tt-gray-light-a-400: rgba(40, 44, 51, 0.42);
  --tt-gray-light-a-500: rgba(52, 55, 60, 0.64);
  --tt-gray-light-a-600: rgba(36, 39, 46, 0.78);
  --tt-gray-light-a-700: rgba(35, 37, 42, 0.87);
  --tt-gray-light-a-800: rgba(30, 32, 36, 0.95);
  --tt-gray-light-a-900: rgba(29, 30, 32, 0.98);
  /* Gray (light mode) */
  --tt-gray-light-50: rgba(250, 250, 250, 1);
  --tt-gray-light-100: rgba(244, 244, 245, 1);
  --tt-gray-light-200: rgba(234, 234, 235, 1);
  --tt-gray-light-300: rgba(213, 214, 215, 1);
  --tt-gray-light-400: rgba(166, 167, 171, 1);
  --tt-gray-light-500: rgba(125, 127, 130, 1);
  --tt-gray-light-600: rgba(83, 86, 90, 1);
  --tt-gray-light-700: rgba(64, 65, 69, 1);
  --tt-gray-light-800: rgba(44, 45, 48, 1);
  --tt-gray-light-900: rgba(34, 35, 37, 1);
  /* Gray alpha (dark mode) */
  --tt-gray-dark-a-50: rgba(232, 232, 253, 0.05);
  --tt-gray-dark-a-100: rgba(231, 231, 243, 0.07);
  --tt-gray-dark-a-200: rgba(238, 238, 246, 0.11);
  --tt-gray-dark-a-300: rgba(239, 239, 245, 0.22);
  --tt-gray-dark-a-400: rgba(244, 244, 255, 0.37);
  --tt-gray-dark-a-500: rgba(236, 238, 253, 0.5);
  --tt-gray-dark-a-600: rgba(247, 247, 253, 0.64);
  --tt-gray-dark-a-700: rgba(251, 251, 254, 0.75);
  --tt-gray-dark-a-800: rgba(253, 253, 253, 0.88);
  --tt-gray-dark-a-900: rgba(255, 255, 255, 0.96);
  /* Gray (dark mode) */
  --tt-gray-dark-50: rgba(25, 25, 26, 1);
  --tt-gray-dark-100: rgba(32, 32, 34, 1);
  --tt-gray-dark-200: rgba(45, 45, 47, 1);
  --tt-gray-dark-300: rgba(70, 70, 73, 1);
  --tt-gray-dark-400: rgba(99, 99, 105, 1);
  --tt-gray-dark-500: rgba(124, 124, 131, 1);
  --tt-gray-dark-600: rgba(163, 163, 168, 1);
  --tt-gray-dark-700: rgba(192, 192, 195, 1);
  --tt-gray-dark-800: rgba(224, 224, 225, 1);
  --tt-gray-dark-900: rgba(245, 245, 245, 1);
  /* Brand colors */
  --tt-brand-color-50: rgba(239, 238, 255, 1);
  --tt-brand-color-100: rgba(222, 219, 255, 1);
  --tt-brand-color-200: rgba(195, 189, 255, 1);
  --tt-brand-color-300: rgba(157, 138, 255, 1);
  --tt-brand-color-400: rgba(122, 82, 255, 1);
  --tt-brand-color-500: rgba(98, 41, 255, 1);
  --tt-brand-color-600: rgba(84, 0, 229, 1);
  --tt-brand-color-700: rgba(75, 0, 204, 1);
  --tt-brand-color-800: rgba(56, 0, 153, 1);
  --tt-brand-color-900: rgba(43, 25, 102, 1);
  --tt-brand-color-950: hsla(257, 100%, 9%, 1);
  /* Green */
  --tt-color-green-inc-5: hsla(129, 100%, 97%, 1);
  --tt-color-green-inc-4: hsla(129, 100%, 92%, 1);
  --tt-color-green-inc-3: hsla(131, 100%, 86%, 1);
  --tt-color-green-inc-2: hsla(133, 98%, 78%, 1);
  --tt-color-green-inc-1: hsla(137, 99%, 70%, 1);
  --tt-color-green-base: hsla(147, 99%, 50%, 1);
  --tt-color-green-dec-1: hsla(147, 97%, 41%, 1);
  --tt-color-green-dec-2: hsla(146, 98%, 32%, 1);
  --tt-color-green-dec-3: hsla(146, 100%, 24%, 1);
  --tt-color-green-dec-4: hsla(144, 100%, 16%, 1);
  --tt-color-green-dec-5: hsla(140, 100%, 9%, 1);
  /* Yellow */
  --tt-color-yellow-inc-5: hsla(50, 100%, 97%, 1);
  --tt-color-yellow-inc-4: hsla(50, 100%, 91%, 1);
  --tt-color-yellow-inc-3: hsla(50, 100%, 84%, 1);
  --tt-color-yellow-inc-2: hsla(50, 100%, 77%, 1);
  --tt-color-yellow-inc-1: hsla(50, 100%, 68%, 1);
  --tt-color-yellow-base: hsla(52, 100%, 50%, 1);
  --tt-color-yellow-dec-1: hsla(52, 100%, 41%, 1);
  --tt-color-yellow-dec-2: hsla(52, 100%, 32%, 1);
  --tt-color-yellow-dec-3: hsla(52, 100%, 24%, 1);
  --tt-color-yellow-dec-4: hsla(51, 100%, 16%, 1);
  --tt-color-yellow-dec-5: hsla(50, 100%, 9%, 1);
  /* Red */
  --tt-color-red-inc-5: hsla(11, 100%, 96%, 1);
  --tt-color-red-inc-4: hsla(11, 100%, 88%, 1);
  --tt-color-red-inc-3: hsla(10, 100%, 80%, 1);
  --tt-color-red-inc-2: hsla(9, 100%, 73%, 1);
  --tt-color-red-inc-1: hsla(7, 100%, 64%, 1);
  --tt-color-red-base: hsla(7, 100%, 54%, 1);
  --tt-color-red-dec-1: hsla(7, 100%, 41%, 1);
  --tt-color-red-dec-2: hsla(5, 100%, 32%, 1);
  --tt-color-red-dec-3: hsla(4, 100%, 24%, 1);
  --tt-color-red-dec-4: hsla(3, 100%, 16%, 1);
  --tt-color-red-dec-5: hsla(1, 100%, 9%, 1);
  /* Basic colors */
  --white: rgba(255, 255, 255, 1);
  --black: rgba(14, 14, 17, 1);
  --transparent: rgba(255, 255, 255, 0);
  /****************** 
  Shadow variables
  ******************/
  /* Shadows Light */
  --tt-shadow-elevated-md:
    0px 16px 48px 0px rgba(17, 24, 39, 0.04),
    0px 12px 24px 0px rgba(17, 24, 39, 0.04),
    0px 6px 8px 0px rgba(17, 24, 39, 0.02),
    0px 2px 3px 0px rgba(17, 24, 39, 0.02);
  /************************************************** 
       Radius variables 
    **************************************************/
  --tt-radius-xxs: 0.125rem;
  /* 2px */
  --tt-radius-xs: 0.25rem;
  /* 4px */
  --tt-radius-sm: 0.375rem;
  /* 6px */
  --tt-radius-md: 0.5rem;
  /* 8px */
  --tt-radius-lg: 0.75rem;
  /* 12px */
  --tt-radius-xl: 1rem;
  /* 16px */
  /************************************************** 
       Transition variables 
    **************************************************/
  --tt-transition-duration-short: 0.1s;
  --tt-transition-duration-default: 0.2s;
  --tt-transition-duration-long: 0.64s;
  --tt-transition-easing-default: cubic-bezier(0.46, 0.03, 0.52, 0.96);
  --tt-transition-easing-cubic: cubic-bezier(0.65, 0.05, 0.36, 1);
  --tt-transition-easing-quart: cubic-bezier(0.77, 0, 0.18, 1);
  --tt-transition-easing-circ: cubic-bezier(0.79, 0.14, 0.15, 0.86);
  --tt-transition-easing-back: cubic-bezier(0.68, -0.55, 0.27, 1.55);
  /****************** 
  Contrast variables
  ******************/
  --tt-accent-contrast: 8%;
  --tt-destructive-contrast: 8%;
  --tt-foreground-contrast: 8%;
}

:root {
  /************************************************** 
      Global colors 
  **************************************************/
  /* Global colors - Light mode */
  --tt-bg-color: var(--white);
  --tt-border-color: var(--tt-gray-light-a-200);
  --tt-border-color-tint: var(--tt-gray-light-a-100);
  --tt-sidebar-bg-color: var(--tt-gray-light-100);
  --tt-scrollbar-color: var(--tt-gray-light-a-200);
  --tt-cursor-color: var(--tt-brand-color-500);
  --tt-selection-color: rgba(157, 138, 255, 0.2);
  --tt-card-bg-color: var(--white);
  --tt-card-border-color: var(--tt-gray-light-a-100);
}

/* Text colors */
:root {
  --tt-text-color-gray: hsl(45, 2%, 46%);
  --tt-text-color-brown: hsl(19, 31%, 47%);
  --tt-text-color-orange: hsl(30, 89%, 45%);
  --tt-text-color-yellow: hsl(38, 62%, 49%);
  --tt-text-color-green: hsl(148, 32%, 39%);
  --tt-text-color-blue: hsl(202, 54%, 43%);
  --tt-text-color-purple: hsl(274, 32%, 54%);
  --tt-text-color-pink: hsl(328, 49%, 53%);
  --tt-text-color-red: hsl(2, 62%, 55%);
  --tt-text-color-gray-contrast: hsla(39, 26%, 26%, 0.15);
  --tt-text-color-brown-contrast: hsla(18, 43%, 69%, 0.35);
  --tt-text-color-orange-contrast: hsla(24, 73%, 55%, 0.27);
  --tt-text-color-yellow-contrast: hsla(44, 82%, 59%, 0.39);
  --tt-text-color-green-contrast: hsla(126, 29%, 60%, 0.27);
  --tt-text-color-blue-contrast: hsla(202, 54%, 59%, 0.27);
  --tt-text-color-purple-contrast: hsla(274, 37%, 64%, 0.27);
  --tt-text-color-pink-contrast: hsla(331, 60%, 71%, 0.27);
  --tt-text-color-red-contrast: hsla(8, 79%, 79%, 0.4);
}

:root {
  --tt-highlight-yellow: #fef9c3;
  --tt-highlight-green: #dcfce7;
  --tt-highlight-blue: #e0f2fe;
  --tt-highlight-purple: #f3e8ff;
  --tt-highlight-red: #ffe4e6;
  --tt-highlight-gray: rgb(248, 248, 247);
  --tt-highlight-brown: rgb(244, 238, 238);
  --tt-highlight-orange: rgb(251, 236, 221);
  --tt-highlight-pink: rgb(252, 241, 246);
  --tt-highlight-yellow-contrast: #fbe604;
  --tt-highlight-green-contrast: #c7fad8;
  --tt-highlight-blue-contrast: #ceeafd;
  --tt-highlight-purple-contrast: #e4ccff;
  --tt-highlight-red-contrast: #ffccd0;
  --tt-highlight-gray-contrast: rgba(84, 72, 49, 0.15);
  --tt-highlight-brown-contrast: rgba(210, 162, 141, 0.35);
  --tt-highlight-orange-contrast: rgba(224, 124, 57, 0.27);
  --tt-highlight-pink-contrast: rgba(225, 136, 179, 0.27);
}

.tiptap.ProseMirror {
  --tt-inline-code-bg-color: var(--tt-gray-light-a-100);
  --tt-inline-code-text-color: var(--tt-gray-light-a-700);
  --tt-inline-code-border-color: var(--tt-gray-light-a-200);
  --tt-codeblock-bg: var(--tt-gray-light-a-50);
  --tt-codeblock-text: var(--tt-gray-light-a-800);
  --tt-codeblock-border: var(--tt-gray-light-a-200);
}

.tiptap.ProseMirror code {
  background-color: var(--tt-inline-code-bg-color);
  color: var(--tt-inline-code-text-color);
  border: 1px solid var(--tt-inline-code-border-color);
  font-family: "JetBrains Mono NL", monospace;
  font-size: 0.875em;
  line-height: 1.4;
  border-radius: 6px/0.375rem;
  padding: 0.1em 0.2em;
}

.tiptap.ProseMirror pre {
  background-color: var(--black);
  color: var(--white);
  border: 1px solid var(--tt-codeblock-border);
  margin-top: 1.5em;
  font-family: 'JetBrainsMono', monospace;
  margin-bottom: 1.5em;
  padding: 1em;
  font-size: 1rem;
  border-radius: 6px/0.375rem;
}

.tiptap.ProseMirror pre code {
  background-color: transparent;
  border: none;
  border-radius: 0;
  -webkit-text-fill-color: inherit;
  color: inherit;
}

.tiptap.ProseMirror img {
  max-width: 100%;
  height: auto;
  display: block;
}

.tiptap.ProseMirror>img:not([data-type="emoji"] img) {
  margin: 2rem 0;
  outline: 0.125rem solid transparent;
  border-radius: var(--tt-radius-xs, 0.25rem);
}

.tiptap.ProseMirror.ProseMirror-focused img:not([data-type="emoji"] img).ProseMirror-selectednode {
  outline-color: var(--tt-brand-color-500);
}

.tiptap.ProseMirror .tiptap-thread:has(> img) {
  margin: 2rem 0;
}

.tiptap.ProseMirror .tiptap-thread:has(> img) img {
  outline: 0.125rem solid transparent;
  border-radius: var(--tt-radius-xs, 0.25rem);
}

.tiptap.ProseMirror .tiptap-thread img {
  margin: 0;
}

.tiptap.ProseMirror {
  --tt-checklist-bg-color: var(--tt-gray-light-a-100);
  --tt-checklist-bg-active-color: var(--tt-gray-light-a-900);
  --tt-checklist-border-color: var(--tt-gray-light-a-200);
  --tt-checklist-border-active-color: var(--tt-gray-light-a-900);
  --tt-checklist-check-icon-color: var(--white);
  --tt-checklist-text-active: var(--tt-gray-light-a-500);
}

.tiptap.ProseMirror ol,
.tiptap.ProseMirror ul {
  margin-top: 1.5em;
  margin-bottom: 1.5em;
  padding-left: 1.5em;
}

.tiptap.ProseMirror ol:first-child,
.tiptap.ProseMirror ul:first-child {
  margin-top: 0;
}

.tiptap.ProseMirror ol:last-child,
.tiptap.ProseMirror ul:last-child {
  margin-bottom: 0;
}

.tiptap.ProseMirror ol ol,
.tiptap.ProseMirror ol ul,
.tiptap.ProseMirror ul ol,
.tiptap.ProseMirror ul ul {
  margin-top: 0;
  margin-bottom: 0;
}

.tiptap.ProseMirror li p {
  margin-top: 0;
}

.tiptap.ProseMirror ol {
  list-style: decimal;
}

.tiptap.ProseMirror ol ol {
  list-style: lower-alpha;
}

.tiptap.ProseMirror ol ol ol {
  list-style: lower-roman;
}

.tiptap.ProseMirror ul:not([data-type="taskList"]) {
  list-style: disc;
}

.tiptap.ProseMirror ul:not([data-type="taskList"]) ul {
  list-style: circle;
}

.tiptap.ProseMirror ul:not([data-type="taskList"]) ul ul {
  list-style: disc;
}

.tiptap.ProseMirror ul[data-type="taskList"] {
  padding-left: 0.25em;
}

.tiptap.ProseMirror ul[data-type="taskList"] li {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
}

.tiptap.ProseMirror ul[data-type="taskList"] li:not(:has(> p:first-child)) {
  list-style-type: none;
}

.tiptap.ProseMirror ul[data-type="taskList"] li[data-checked="true"]>div>p {
  opacity: 0.5;
  text-decoration: line-through;
}

.tiptap.ProseMirror ul[data-type="taskList"] li[data-checked="true"]>div>p span {
  text-decoration: line-through;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label {
  position: relative;
  padding-top: 4px;
  padding-right: 8px;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label span {
  display: block;
  width: 1em;
  height: 1em;
  border: 1px solid var(--tt-checklist-border-color);
  border-radius: var(--tt-radius-xs, 0.25rem);
  position: relative;
  cursor: pointer;
  background-color: var(--tt-checklist-bg-color);
  transition: background-color 80ms ease-out, border-color 80ms ease-out;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label span::before {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 0.75em;
  height: 0.75em;
  background-color: var(--tt-checklist-check-icon-color);
  opacity: 0;
  -webkit-mask: url("data:image/svg+xml,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22currentColor%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M21.4142%204.58579C22.1953%205.36683%2022.1953%206.63317%2021.4142%207.41421L10.4142%2018.4142C9.63317%2019.1953%208.36684%2019.1953%207.58579%2018.4142L2.58579%2013.4142C1.80474%2012.6332%201.80474%2011.3668%202.58579%2010.5858C3.36683%209.80474%204.63317%209.80474%205.41421%2010.5858L9%2014.1716L18.5858%204.58579C19.3668%203.80474%2020.6332%203.80474%2021.4142%204.58579Z%22%20fill%3D%22currentColor%22%2F%3E%3C%2Fsvg%3E") center/contain no-repeat;
  mask: url("data:image/svg+xml,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22currentColor%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M21.4142%204.58579C22.1953%205.36683%2022.1953%206.63317%2021.4142%207.41421L10.4142%2018.4142C9.63317%2019.1953%208.36684%2019.1953%207.58579%2018.4142L2.58579%2013.4142C1.80474%2012.6332%201.80474%2011.3668%202.58579%2010.5858C3.36683%209.80474%204.63317%209.80474%205.41421%2010.5858L9%2014.1716L18.5858%204.58579C19.3668%203.80474%2020.6332%203.80474%2021.4142%204.58579Z%22%20fill%3D%22currentColor%22%2F%3E%3C%2Fsvg%3E") center/contain no-repeat;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label input[type="checkbox"]:checked+span {
  background: var(--tt-checklist-bg-active-color);
  border-color: var(--tt-checklist-border-active-color);
}

.tiptap.ProseMirror ul[data-type="taskList"] li label input[type="checkbox"]:checked+span::before {
  opacity: 1;
}

.tiptap.ProseMirror ul[data-type="taskList"] li div {
  flex: 1 1 0%;
  min-width: 0;
}

.tiptap.ProseMirror {
  --blockquote-bg-color: var(--tt-gray-light-900);
  --link-text-color: var(--tt-brand-color-500);
  --separator-color: var(--tt-gray-light-a-200);
  --thread-text: var(--tt-gray-light-900);
  --placeholder-color: var(--tt-gray-light-a-400);
  --tiptap-mathematics-bg-color: var(--tt-gray-light-a-200);
  --tiptap-mathematics-border-color: var(--tt-brand-color-500);
}

.tiptap.ProseMirror {
  white-space: pre-wrap;
  outline: none;
  min-height: 100%;
  caret-color: var(--tt-cursor-color);
}

.tiptap.ProseMirror p:not(:first-child) {
  font-size: 1rem;
  line-height: 1.6;
  font-weight: normal;
  margin-top: 16px;
}

.tiptap.ProseMirror:not(.readonly):not(.ProseMirror-hideselection) ::selection {
  background-color: var(--tt-selection-color);
}

.tiptap.ProseMirror:not(.readonly):not(.ProseMirror-hideselection) .selection::selection {
  background: transparent;
}

.tiptap.ProseMirror .selection {
  display: inline;
  background-color: var(--tt-selection-color);
}

.tiptap.ProseMirror .ProseMirror-hideselection {
  caret-color: transparent;
}

.tiptap.ProseMirror>p.is-editor-empty::before {
  content: attr(data-placeholder);
  pointer-events: none;
  color: var(--placeholder-color);
  float: left;
  height: 0;
}

.tiptap.ProseMirror.resize-cursor {
  cursor: ew-resize;
  cursor: col-resize;
}

.tiptap.ProseMirror .ProseMirror-gapcursor {
  display: none;
  pointer-events: none;
  position: absolute;
}

.tiptap.ProseMirror .ProseMirror-gapcursor:after {
  content: "";
  display: block;
  position: absolute;
  top: 1em;
  width: 1.25em;
  border-top: 1px solid black;
  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
}

.tiptap.ProseMirror.ProseMirror-focused .ProseMirror-gapcursor,
.tiptap.ProseMirror.ProseMirror.ProseMirror-focused .ProseMirror-gapcursor {
  display: block;
}

@keyframes ProseMirror-cursor-blink {
  to {
    visibility: hidden;
  }
}

.tiptap.ProseMirror a span {
  text-decoration: underline;
}

.tiptap.ProseMirror s span {
  text-decoration: line-through;
}

.tiptap.ProseMirror u span {
  text-decoration: underline;
}

.tiptap.ProseMirror blockquote {
  position: relative;
  padding-left: 1em;
  padding-top: 0.375em;
  padding-bottom: 0.375em;
  margin: 1.5rem 0;
}

.tiptap.ProseMirror blockquote p {
  margin-top: 0;
}

.tiptap.ProseMirror blockquote::before,
.tiptap.ProseMirror blockquote.is-empty::before {
  position: absolute;
  bottom: 0;
  left: 0;
  top: 0;
  height: 100%;
  width: 0.25em;
  background-color: var(--blockquote-bg-color);
  content: "";
  border-radius: 0;
}

.tiptap.ProseMirror .collaboration-cursor__caret {
  border-right: 1px solid transparent;
  border-left: 1px solid transparent;
  pointer-events: none;
  margin-left: -1px;
  margin-right: -1px;
  position: relative;
  word-break: normal;
}

.tiptap.ProseMirror .collaboration-cursor__label {
  border-radius: 0.25rem;
  border-bottom-left-radius: 0;
  font-size: 0.75rem;
  font-weight: 600;
  left: -1px;
  line-height: 1;
  padding: 0.125rem 0.375rem;
  position: absolute;
  top: -1.3em;
  user-select: none;
  white-space: nowrap;
}

.tiptap.ProseMirror [data-type="emoji"] img {
  display: inline-block;
  width: 1.25em;
  height: 1.25em;
  cursor: text;
}

.tiptap.ProseMirror h1,
.tiptap.ProseMirror h2,
.tiptap.ProseMirror h3,
.tiptap.ProseMirror h4,
.tiptap.ProseMirror h5,
.tiptap.ProseMirror h6 {
  position: relative;
  color: inherit;
  font-style: inherit;
}

.tiptap.ProseMirror h1:first-child,
.tiptap.ProseMirror h2:first-child,
.tiptap.ProseMirror h3:first-child,
.tiptap.ProseMirror h4:first-child,
.tiptap.ProseMirror h5:first-child,
.tiptap.ProseMirror h6:first-child {
  margin-top: 0;
}

.tiptap.ProseMirror h1 {
  font-size: 28px;
  font-weight: 700;
  margin-top: 1.5em;
}

.tiptap.ProseMirror h2 {
  font-size: 24px;
  font-weight: 700;
  margin-top: 1.2em;
}

.tiptap.ProseMirror h3 {
  font-size: 20px;
  font-weight: 600;
  margin-top: 1em;
}

.tiptap.ProseMirror h4 {
  font-size: 18px;
  font-weight: 600;
  margin-top: 0.8em;
}

.tiptap.ProseMirror h5 {
  font-size: 16px;
  font-weight: 600;
  margin-top: 0.5em;
}

.tiptap.ProseMirror h6 {
  font-size: 14px;
  font-weight: 600;
  margin-top: 0.2em;
}

.tiptap.ProseMirror hr {
  margin-top: 3em;
  margin-bottom: 3em;
  border: none;
  height: 1px;
  background-color: var(--separator-color);
}

.tiptap.ProseMirror.ProseMirror-focused hr.ProseMirror-selectednode {
  border-radius: 9999px;
  outline: 3px solid var(--tt-brand-color-500);
  outline-offset: 2px;
}

.tiptap.ProseMirror a {
  color: var(--link-text-color);
  text-decoration: underline;
}

.tiptap.ProseMirror [data-type="mention"] {
  display: inline-block;
  color: var(--tt-brand-color-500);
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline {
  transition: color 0.2s ease-in-out, background-color 0.2s ease-in-out;
  color: var(--thread-text);
  border-bottom: 2px dashed var(--tt-color-yellow-base);
  font-weight: 600;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline.tiptap-thread--selected,
.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline.tiptap-thread--hovered {
  background-color: var(--tt-color-yellow-inc-2);
  border-bottom-color: transparent;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:has(img) {
  outline: 0.125rem solid var(--tt-color-yellow-base);
  border-radius: var(--tt-radius-xs, 0.25rem);
  overflow: hidden;
  width: fit-content;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:has(img).tiptap-thread--selected {
  outline-width: 0.25rem;
  outline-color: var(--tt-color-yellow-base);
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:has(img).tiptap-thread--hovered {
  outline-width: 0.25rem;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:not(:has(img)) {
  border-radius: 0.25rem;
  border-bottom: 0.125rem dashed var(--tt-color-yellow-base);
  padding-bottom: 0.5rem;
  outline: 0.25rem solid transparent;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:not(:has(img)).tiptap-thread--hovered,
.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:not(:has(img)).tiptap-thread--selected {
  background-color: var(--tt-color-yellow-base);
  outline-color: var(--tt-color-yellow-base);
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--resolved.tiptap-thread--inline.tiptap-thread--selected {
  background-color: var(--tt-color-yellow-base);
  border-color: transparent;
  opacity: 0.5;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--block:has(.react-renderer) {
  margin-top: 3rem;
  margin-bottom: 3rem;
}

.tiptap.ProseMirror .Tiptap-mathematics-editor {
  padding: 0 0.25rem;
  margin: 0 0.25rem;
  border: 1px solid var(--tiptap-mathematics-border-color);
  font-family: monospace;
  font-size: 0.875rem;
}

.tiptap.ProseMirror .Tiptap-mathematics-render {
  padding: 0 0.25rem;
}

.tiptap.ProseMirror .Tiptap-mathematics-render--editable {
  cursor: pointer;
  transition: background 0.2s;
}

.tiptap.ProseMirror .Tiptap-mathematics-render--editable:hover {
  background: var(--tiptap-mathematics-bg-color);
}

.tiptap.ProseMirror .Tiptap-mathematics-editor,
.tiptap.ProseMirror .Tiptap-mathematics-render {
  border-radius: var(--tt-radius-xs);
  display: inline-block;
}

.is-empty[data-placeholder]:has(> .ProseMirror-trailingBreak:only-child)::before {
  content: "Write, type '/' for commands…";
}

.is-empty[data-placeholder]:has(> .ProseMirror-trailingBreak:only-child):before {
  pointer-events: none;
  height: 0;
  position: absolute;
  font-style: italic;
}

.is-empty[data-placeholder]:has(> .ProseMirror-trailingBreak):before {
  color: var(--placeholder-color);
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes zoomIn {
  from {
    transform: scale(0.95);
  }

  to {
    transform: scale(1);
  }
}

@keyframes zoomOut {
  from {
    transform: scale(1);
  }

  to {
    transform: scale(0.95);
  }
}

@keyframes zoom {
  0% {
    opacity: 0;
    transform: scale(0.95);
  }

  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes slideFromTop {
  from {
    transform: translateY(-0.5rem);
  }

  to {
    transform: translateY(0);
  }
}

@keyframes slideFromRight {
  from {
    transform: translateX(0.5rem);
  }

  to {
    transform: translateX(0);
  }
}

@keyframes slideFromLeft {
  from {
    transform: translateX(-0.5rem);
  }

  to {
    transform: translateX(0);
  }
}

@keyframes slideFromBottom {
  from {
    transform: translateY(0.5rem);
  }

  to {
    transform: translateY(0);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.editor-container hr {
  height: 0;
  color: inherit;
  border-top-width: 1px;
}

.editor-container abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

.editor-container h1,
.editor-container h2,
.editor-container h3,
.editor-container h4,
.editor-container h5,
.editor-container h6 {
  font-size: inherit;
  font-weight: inherit;
}

.editor-container a {
  color: inherit;
  text-decoration: inherit;
}

.editor-container b,
.editor-container strong {
  font-weight: bolder;
}

.editor-container code,
.editor-container kbd,
.editor-container samp,
.editor-container pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-feature-settings: normal;
  font-variation-settings: normal;
  font-size: 1em;
}

.editor-container small {
  font-size: 80%;
}

.editor-container sub,
.editor-container sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

.editor-container sub {
  bottom: -0.25em;
}

.editor-container sup {
  top: -0.5em;
}

.editor-container table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}

.editor-container :-moz-focusring {
  outline: auto;
}

.editor-container :-moz-ui-invalid {
  box-shadow: none;
}

.editor-container progress {
  vertical-align: baseline;
}

.editor-container ::-webkit-inner-spin-button,
.editor-container ::-webkit-outer-spin-button {
  height: auto;
}

.editor-container [type="search"] {
  appearance: textfield;
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

.editor-container ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.editor-container ::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

.editor-container summary {
  display: list-item;
}

.editor-container blockquote,
.editor-container dl,
.editor-container dd,
.editor-container h1,
.editor-container h2,
.editor-container h3,
.editor-container h4,
.editor-container h5,
.editor-container h6,
.editor-container hr,
.editor-container figure,
.editor-container p,
.editor-container pre {
  margin: 0;
}

.editor-container fieldset {
  margin: 0;
  padding: 0;
}

.editor-container legend {
  padding: 0;
}

.editor-container ol,
.editor-container ul,
.editor-container menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

.editor-container dialog {
  padding: 0;
}

.editor-container textarea {
  resize: vertical;
}

.editor-container :disabled {
  cursor: default;
}

.editor-container img,
.editor-container svg,
.editor-container video,
.editor-container canvas,
.editor-container audio,
.editor-container iframe,
.editor-container embed,
.editor-container object {
  display: block;
}

.editor-container img,
.editor-container video {
  max-width: 100%;
  height: auto;
}

.editor-container [hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

.tiptap.ProseMirror {
  font-family: "DM Sans", sans-serif;
}

.editor-content {
  /* Firefox scrollbar */
  scrollbar-width: thin;
  scrollbar-color: var(--tt-scrollbar-color) transparent;
}

.editor-content::-webkit-scrollbar {
  display: block;
  width: 0.5rem;
}

.editor-content::-webkit-scrollbar-track {
  background: transparent;
}

.editor-content::-webkit-scrollbar-thumb {
  background-color: var(--tt-scrollbar-color);
  border-radius: 4px;
}

.editor-table {
  border-collapse: collapse;
  margin: 1rem 0;
}

.editor-table td,
.editor-table th {
  border: 1px solid #ddd;
  padding: 8px;
  min-width: 50px;
  cursor: context-menu;
  position: relative;
  cursor: pointer;
}

.editor-table td:hover,
.editor-table th:hover {
  background-color: #F8F9FA;
}

.editor-table td:hover::after,
.editor-table th:hover::after {
  content: '右键点击可操作';
  position: absolute;
  bottom: -20px;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 2px 6px;
  border-radius: 4px;
  font-size: 12px;
  white-space: nowrap;
  z-index: 1000;
  pointer-events: none;
}